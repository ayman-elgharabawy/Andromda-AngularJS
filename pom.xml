<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.andromda.cartridges</groupId>
        <artifactId>andromda-cartridges</artifactId>
        <version>3.4</version>
    </parent>
    <artifactId>PAG-AngularJS-Cartridge</artifactId>
    <packaging>jar</packaging>
    <name>PAG-AngularJS-Cartridge</name>
    <description>
        The Angularjs cartridge is used to generate Angularjs applications from UML models using both static and dynamic model elements.
        Generated applications have default security and internationalization implementations and can be deployed as they are.
    </description>
    <issueManagement>
        <system>jira</system>
        <url>http://www.andromda.org/jira/browse/JSF</url>
    </issueManagement>
    <scm>
        <connection>scm:svn:http://andromda.svn.sourceforge.net/svnroot/andromda/trunk/cartridges/andromda-jsf</connection>
        <developerConnection>scm:svn:https://andromda.svn.sourceforge.net/svnroot/andromda/trunk/cartridges/andromda-jsf</developerConnection>
        <url>http://andromda.svn.sourceforge.net/</url>
    </scm>
    <dependencies>
	<!--
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>${project.artifactId}-components</artifactId>
            <version>${project.version}</version>
        </dependency>
		-->
		<dependency>
	<groupId>org.apache.commons</groupId>
	<artifactId>commons-lang3</artifactId>
	<version>3.4</version>
    </dependency>
		
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>andromda-meta-cartridge</artifactId>
            <version>${andromda.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromda-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.andromda.cartridges</groupId>
                        <artifactId>andromda-meta-cartridge</artifactId>
                        <version>${andromda.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            
	<plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/resources/WEB-INF/</outputDirectory>
              <resources>          
                <resource>
                  <directory>${project.build.outputDirectory}/resources/html/atlanta/</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>
	<!--
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromda-cartridge-plugin</artifactId>
                <executions>
                    <execution>
                        <id>jsf-uml2</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <actualDirectory>${project.build.directory}/cartridge-test/actualUML2</actualDirectory>
                            <expectedDirectory>${project.build.directory}/cartridge-test/expectedUML2</expectedDirectory>
                            <expectedOutputArchive>${project.basedir}/src/test/expected/cartridge-outputUML2.zip</expectedOutputArchive>
                            <configurationUri>file:${project.basedir}/conf/test/andromdaUML2.xml</configurationUri>
                            <reportDirectory>${project.build.directory}/cartridge-test/reportsUML2</reportDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin> -->
        <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromda-cartridge-plugin</artifactId>
                <executions>
                    <execution>
                        <id>angularjs</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <actualDirectory>${project.build.directory}/cartridge-test/actual</actualDirectory>
                            <expectedDirectory>${project.build.directory}/cartridge-test/expectedUML</expectedDirectory>
                            <expectedOutputArchive>${project.basedir}/src/test/expected/cartridge-output.zip</expectedOutputArchive>
                            <configurationUri>file:${project.basedir}/conf/test/andromda.xml</configurationUri>
                            <reportDirectory>${project.build.directory}/cartridge-test/reportsUML</reportDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		<plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <properties>
        <uml2.output.dir>${project.basedir}/target/cartridge-test/actualUML2</uml2.output.dir>
        <test.output.dir>${project.basedir}/target/cartridge-test/actual</test.output.dir>
        <uml2.model.uri>file:${src.dir}/uml2/JSFMetafacadeModel.uml</uml2.model.uri>
        <uml2.test.model.uri>file:${test.src.dir}/uml2/JSFCartridgeTestModel.uml</uml2.test.model.uri>
        <model.uri>jar:file:${src.dir}/uml/JSFMetafacadeModel.xml.zip!/JSFMetafacadeModel.xml</model.uri>
        <test.model.uri>jar:file:${test.src.dir}/uml/JSFCartridgeTestModel.xml.zip!/JSFCartridgeTestModel.xml</test.model.uri>
    </properties>
</project>
